apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'

android {
    compileSdkVersion 29

    defaultConfig {
        applicationId "com.molette.uniq"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        dataBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
        freeCompilerArgs += ["-Xopt-in=kotlin.RequiresOptIn"]
    }

    buildTypes {
        debug{
            buildConfigField "String", "MARVEL_BASE_API", '"https://swapi.dev/api/"'
            buildConfigField "String", "MARVEL_API_KEY", '"94333addb791dc62dd9389be2dfc0b45"'
        }
        release {
            buildConfigField "String", "MARVEL_BASE_API", '"https://swapi.dev/api/"'
            buildConfigField "String", "MARVEL_API_KEY", '"94333addb791dc62dd9389be2dfc0b45"'
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    def retrofit_version = "2.9.0"
    def room_version = "2.3.0-alpha02"
    def coroutines_version = "1.3.9"
    def lifecycle_version = "2.2.0"
    def navigation_version = "2.3.0"
    def koin_version = "2.1.6"
    def paging_version = "3.0.0-alpha06"

    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    //Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation 'com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.5.0'

    // OkHttp
    implementation "com.squareup.okhttp3:okhttp:3.14.9"
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.12'

    // Kotlinx Serialization
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.20.0"

    //Room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version" // For Kotlin use kapt instead of annotationProcessor
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    // Koin
    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    androidTestImplementation "org.koin:koin-test:$koin_version"

    // Paging
    implementation "androidx.paging:paging-runtime:$paging_version"

    debugImplementation 'com.amitshekhar.android:debug-db:1.0.6'

}